-- MySQL Script generated by MySQL Workbench
-- Wed Oct  7 13:17:39 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema AutotestDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `AutotestDB` ;

-- -----------------------------------------------------
-- Schema AutotestDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `AutotestDB` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `AutotestDB` ;

-- -----------------------------------------------------
-- Table `AutotestDB`.`Login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`Login` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`Login` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `lastProduct` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `AutotestDB`.`Module`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`Module` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`Module` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `hidden` TINYINT NOT NULL DEFAULT 1,
  `Product_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Product_id`),
  INDEX `fk_Module_Product1_idx` (`Product_id` ASC) VISIBLE,
  CONSTRAINT `fk_Module_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `AutotestDB`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`Module_Step`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`Module_Step` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`Module_Step` (
  `Module_id` INT NOT NULL,
  `Step_id` INT NOT NULL,
  `stepNumber` INT NOT NULL DEFAULT 0,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`Module_id`, `Step_id`),
  INDEX `fk_Module_has_Step_Step1_idx` (`Step_id` ASC) VISIBLE,
  INDEX `fk_Module_has_Step_Module1_idx` (`Module_id` ASC) VISIBLE,
  CONSTRAINT `fk_Module_has_Step_Module1`
    FOREIGN KEY (`Module_id`)
    REFERENCES `AutotestDB`.`Module` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Module_has_Step_Step1`
    FOREIGN KEY (`Step_id`)
    REFERENCES `AutotestDB`.`Step` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`Product` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`Product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `AutotestDB`.`ResultType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`ResultType` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`ResultType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `AutotestDB`.`Run`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`Run` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`Run` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `endTime` TIMESTAMP NULL,
  `scriptVersion` INT NOT NULL,
  `softwareVersion` VARCHAR(45) NOT NULL,
  `Suite_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Suite_id`),
  INDEX `fk_Run_Suite1_idx` (`Suite_id` ASC) VISIBLE,
  CONSTRAINT `fk_Run_Suite1`
    FOREIGN KEY (`Suite_id`)
    REFERENCES `AutotestDB`.`Suite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`Step`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`Step` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`Step` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  `function` VARCHAR(255) NOT NULL,
  `Product_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Product_id`),
  INDEX `fk_Step_Product1_idx` (`Product_id` ASC) VISIBLE,
  CONSTRAINT `fk_Step_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `AutotestDB`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`StepData`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`StepData` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`StepData` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  `value` VARCHAR(255) NOT NULL,
  `Step_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Step_id`),
  INDEX `fk_StepData_Step1_idx` (`Step_id` ASC) VISIBLE,
  CONSTRAINT `fk_StepData_Step1`
    FOREIGN KEY (`Step_id`)
    REFERENCES `AutotestDB`.`Step` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`StepResult`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`StepResult` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`StepResult` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `resulttext` VARCHAR(255) NOT NULL,
  `imagepath` VARCHAR(45) NULL,
  `ResultType_id` INT NOT NULL,
  `Step_id` INT NOT NULL,
  `TestResult_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Step_id`, `ResultType_id`, `TestResult_id`),
  INDEX `fk_StepResult_ResultType1_idx` (`ResultType_id` ASC) VISIBLE,
  INDEX `fk_StepResult_Step1_idx` (`Step_id` ASC) VISIBLE,
  INDEX `fk_StepResult_TestResult1_idx` (`TestResult_id` ASC) VISIBLE,
  CONSTRAINT `fk_StepResult_ResultType1`
    FOREIGN KEY (`ResultType_id`)
    REFERENCES `AutotestDB`.`ResultType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StepResult_Step1`
    FOREIGN KEY (`Step_id`)
    REFERENCES `AutotestDB`.`Step` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StepResult_TestResult1`
    FOREIGN KEY (`TestResult_id`)
    REFERENCES `AutotestDB`.`TestResult` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`Suite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`Suite` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`Suite` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `Product_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Product_id`),
  INDEX `fk_Suite_Product1_idx` (`Product_id` ASC) VISIBLE,
  CONSTRAINT `fk_Suite_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `AutotestDB`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`TestCase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`TestCase` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`TestCase` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NULL,
  `scriptVersion` INT NOT NULL DEFAULT 1,
  `testRailId` INT NOT NULL,
  `TestType_id` INT NOT NULL,
  `Product_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Product_id`, `TestType_id`),
  INDEX `fk_TestCase_TestType1_idx` (`TestType_id` ASC) VISIBLE,
  INDEX `fk_TestCase_Product1_idx` (`Product_id` ASC) VISIBLE,
  CONSTRAINT `fk_TestCase_TestType1`
    FOREIGN KEY (`TestType_id`)
    REFERENCES `AutotestDB`.`TestType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TestCase_Product1`
    FOREIGN KEY (`Product_id`)
    REFERENCES `AutotestDB`.`Product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`TestCase_Module`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`TestCase_Module` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`TestCase_Module` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `Module_id` INT NOT NULL,
  `TestCase_id` INT NOT NULL,
  `moduleNumber` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`Module_id`, `TestCase_id`),
  INDEX `fk_TestCase_Module_TestCase1_idx` (`TestCase_id` ASC) VISIBLE,
  CONSTRAINT `fk_TestCase_Module_Module1`
    FOREIGN KEY (`Module_id`)
    REFERENCES `AutotestDB`.`Module` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TestCase_Module_TestCase1`
    FOREIGN KEY (`TestCase_id`)
    REFERENCES `AutotestDB`.`TestCase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`TestCase_Suite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`TestCase_Suite` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`TestCase_Suite` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `Suite_id` INT NOT NULL,
  `TestCase_id` INT NOT NULL,
  PRIMARY KEY (`Suite_id`, `TestCase_id`),
  INDEX `fk_Driver_Suite_Suite1_idx` (`Suite_id` ASC) VISIBLE,
  INDEX `fk_Case_Suite_TestCase1_idx` (`TestCase_id` ASC) VISIBLE,
  CONSTRAINT `fk_Driver_Suite_Suite1`
    FOREIGN KEY (`Suite_id`)
    REFERENCES `AutotestDB`.`Suite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Case_Suite_TestCase1`
    FOREIGN KEY (`TestCase_id`)
    REFERENCES `AutotestDB`.`TestCase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`TestResult`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`TestResult` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`TestResult` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `ResultType_id` INT NOT NULL,
  `TestCase_id` INT NOT NULL,
  `Run_id` INT NOT NULL,
  PRIMARY KEY (`id`, `TestCase_id`, `Run_id`, `ResultType_id`),
  INDEX `fk_TestResult_ResultType1_idx` (`ResultType_id` ASC) VISIBLE,
  INDEX `fk_TestResult_TestCase1_idx` (`TestCase_id` ASC) VISIBLE,
  INDEX `fk_TestResult_Run1_idx` (`Run_id` ASC) VISIBLE,
  CONSTRAINT `fk_TestResult_ResultType1`
    FOREIGN KEY (`ResultType_id`)
    REFERENCES `AutotestDB`.`ResultType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TestResult_TestCase1`
    FOREIGN KEY (`TestCase_id`)
    REFERENCES `AutotestDB`.`TestCase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TestResult_Run1`
    FOREIGN KEY (`Run_id`)
    REFERENCES `AutotestDB`.`Run` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `AutotestDB`.`TestType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AutotestDB`.`TestType` ;

CREATE TABLE IF NOT EXISTS `AutotestDB`.`TestType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));

USE `AutotestDB`;

DELIMITER $$

USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`Login_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`Login_BEFORE_UPDATE` BEFORE UPDATE ON `Login` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`Module_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`Module_BEFORE_UPDATE` BEFORE UPDATE ON `Module` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`Module_Step_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`Module_Step_BEFORE_UPDATE` BEFORE UPDATE ON `Module_Step` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`Product_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`Product_BEFORE_UPDATE` BEFORE UPDATE ON `Product` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`ResultType_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`ResultType_BEFORE_UPDATE` BEFORE UPDATE ON `ResultType` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`Run_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`Run_BEFORE_UPDATE` BEFORE UPDATE ON `Run` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`Step_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`Step_BEFORE_UPDATE` BEFORE UPDATE ON `Step` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`StepData_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`StepData_BEFORE_UPDATE` BEFORE UPDATE ON `StepData` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`StepResult_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`StepResult_BEFORE_UPDATE` BEFORE UPDATE ON `StepResult` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`Suite_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`Suite_BEFORE_UPDATE` BEFORE UPDATE ON `Suite` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`TestCase_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`TestCase_BEFORE_UPDATE` BEFORE UPDATE ON `TestCase` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`TestCase_Module_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`TestCase_Module_BEFORE_UPDATE` BEFORE UPDATE ON `TestCase_Module` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`TestCase_Suite_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`TestCase_Suite_BEFORE_UPDATE` BEFORE UPDATE ON `TestCase_Suite` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`TestResult_BEFORE_UPDATE_1` $$
USE `AutotestDB`$$
$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`TestResult_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`TestResult_BEFORE_UPDATE` BEFORE UPDATE ON `TestResult` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


USE `AutotestDB`$$
DROP TRIGGER IF EXISTS `AutotestDB`.`TestType_BEFORE_UPDATE` $$
USE `AutotestDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `AutotestDB`.`TestType_BEFORE_UPDATE` BEFORE UPDATE ON `TestType` FOR EACH ROW
BEGIN
	SET NEW.update_time = CURRENT_TIMESTAMP; 
END$$


DELIMITER ;
SET SQL_MODE = '';
DROP USER IF EXISTS autotester;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'autotester' IDENTIFIED BY 'autotester';

GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `AutotestDB`.* TO 'autotester';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `AutotestDB`.`Login`
-- -----------------------------------------------------
START TRANSACTION;
USE `AutotestDB`;
INSERT INTO `AutotestDB`.`Login` (`id`, `create_time`, `update_time`, `name`, `password`, `lastProduct`) VALUES (DEFAULT, NULL, NULL, 'test', 't', DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `AutotestDB`.`ResultType`
-- -----------------------------------------------------
START TRANSACTION;
USE `AutotestDB`;
INSERT INTO `AutotestDB`.`ResultType` (`id`, `create_time`, `update_time`, `name`) VALUES (DEFAULT, NULL, NULL, 'Passed');
INSERT INTO `AutotestDB`.`ResultType` (`id`, `create_time`, `update_time`, `name`) VALUES (DEFAULT, NULL, NULL, 'Failed');

COMMIT;


-- -----------------------------------------------------
-- Data for table `AutotestDB`.`TestType`
-- -----------------------------------------------------
START TRANSACTION;
USE `AutotestDB`;
INSERT INTO `AutotestDB`.`TestType` (`id`, `create_time`, `update_time`, `name`) VALUES (DEFAULT, NULL, NULL, 'Not specified');
INSERT INTO `AutotestDB`.`TestType` (`id`, `create_time`, `update_time`, `name`) VALUES (DEFAULT, NULL, NULL, 'Regression');
INSERT INTO `AutotestDB`.`TestType` (`id`, `create_time`, `update_time`, `name`) VALUES (DEFAULT, NULL, NULL, 'Performance');

COMMIT;

